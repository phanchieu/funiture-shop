{"remainingRequest":"C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Project\\furniture_shop\\furniture\\front_end\\src\\components\\test.vue?vue&type=template&id=e43c18bc&scoped=true&","dependencies":[{"path":"C:\\Project\\furniture_shop\\furniture\\front_end\\src\\components\\test.vue","mtime":1644425266612},{"path":"C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Project\\furniture_shop\\furniture\\front_end\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}